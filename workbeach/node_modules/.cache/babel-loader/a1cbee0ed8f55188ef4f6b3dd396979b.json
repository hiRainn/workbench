{"remainingRequest":"/Applications/MAMP/gopath/workbench/workbeach/node_modules/babel-loader/lib/index.js!/Applications/MAMP/gopath/workbench/workbeach/node_modules/eslint-loader/index.js??ref--13-0!/Applications/MAMP/gopath/workbench/workbeach/src/mock/user/login.js","dependencies":[{"path":"/Applications/MAMP/gopath/workbench/workbeach/src/mock/user/login.js","mtime":1598927029012},{"path":"/Applications/MAMP/gopath/workbench/workbeach/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/workbench/workbeach/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/workbench/workbeach/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBNb2NrIGZyb20gJ21vY2tqcyc7CmltcG9ydCAnQC9tb2NrL2V4dGVuZCc7CnZhciB1c2VyID0gTW9jay5tb2NrKHsKICBuYW1lOiAnQEFETUlOJywKICBhdmF0YXI6ICdAQVZBVEFSJywKICBhZGRyZXNzOiAnQENJVFknLAogIHBvc2l0aW9uOiAnQFBPU0lUSU9OJwp9KTsKTW9jay5tb2NrKCIiLmNvbmNhdChwcm9jZXNzLmVudi5WVUVfQVBQX0FQSV9CQVNFX1VSTCwgIi9sb2dpbiIpLCAncG9zdCcsIGZ1bmN0aW9uIChfcmVmKSB7CiAgdmFyIGJvZHkgPSBfcmVmLmJvZHk7CiAgdmFyIHJlc3VsdCA9IHt9OwoKICB2YXIgX0pTT04kcGFyc2UgPSBKU09OLnBhcnNlKGJvZHkpLAogICAgICBuYW1lID0gX0pTT04kcGFyc2UubmFtZSwKICAgICAgcGFzc3dvcmQgPSBfSlNPTiRwYXJzZS5wYXNzd29yZDsKCiAgaWYgKG5hbWUgIT09ICdhZG1pbicgfHwgcGFzc3dvcmQgIT09ICc4ODg4ODgnKSB7CiAgICByZXN1bHQuY29kZSA9IC0xOwogICAgcmVzdWx0Lm1lc3NhZ2UgPSAn6LSm5oi35ZCN5oiW5a+G56CB6ZSZ6K+v77yIYWRtaW4vODg4ODg477yJJzsKICB9IGVsc2UgewogICAgcmVzdWx0LmNvZGUgPSAwOwogICAgcmVzdWx0Lm1lc3NhZ2UgPSBNb2NrLm1vY2soJ0BUSU1FRklYJykuQ04gKyAn77yM5qyi6L+O5Zue5p2lJzsKICAgIHJlc3VsdC5kYXRhID0ge307CiAgICByZXN1bHQuZGF0YS51c2VyID0gdXNlcjsKICAgIHJlc3VsdC5kYXRhLnRva2VuID0gJ0F1dGhvcml6YXRpb246JyArIE1hdGgucmFuZG9tKCk7CiAgICByZXN1bHQuZGF0YS5leHBpcmVBdCA9IG5ldyBEYXRlKG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgMzAgKiA2MCAqIDEwMDApOwogICAgcmVzdWx0LmRhdGEucGVybWlzc2lvbnMgPSBbewogICAgICBpZDogJ3F1ZXJ5Rm9ybScsCiAgICAgIG9wZXJhdGlvbjogWydhZGQnLCAnZWRpdCddCiAgICB9XTsKICAgIHJlc3VsdC5kYXRhLnJvbGVzID0gW3sKICAgICAgaWQ6ICdhZG1pbicsCiAgICAgIG9wZXJhdGlvbjogWydhZGQnLCAnZWRpdCcsICdkZWxldGUnXQogICAgfV07CiAgfQoKICByZXR1cm4gcmVzdWx0Owp9KTs="},{"version":3,"sources":["/Applications/MAMP/gopath/workbench/workbeach/src/mock/user/login.js"],"names":["Mock","user","mock","name","avatar","address","position","process","env","VUE_APP_API_BASE_URL","body","result","JSON","parse","password","code","message","CN","data","token","Math","random","expireAt","Date","getTime","permissions","id","operation","roles"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAO,eAAP;AAEA,IAAMC,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAU;AACrBC,EAAAA,IAAI,EAAE,QADe;AAErBC,EAAAA,MAAM,EAAE,SAFa;AAGrBC,EAAAA,OAAO,EAAE,OAHY;AAIrBC,EAAAA,QAAQ,EAAE;AAJW,CAAV,CAAb;AAMAN,IAAI,CAACE,IAAL,WAAaK,OAAO,CAACC,GAAR,CAAYC,oBAAzB,aAAuD,MAAvD,EAA+D,gBAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;AACzE,MAAIC,MAAM,GAAG,EAAb;;AADyE,oBAEhDC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAFgD;AAAA,MAElEP,IAFkE,eAElEA,IAFkE;AAAA,MAE5DW,QAF4D,eAE5DA,QAF4D;;AAIzE,MAAIX,IAAI,KAAK,OAAT,IAAoBW,QAAQ,KAAK,QAArC,EAA+C;AAC7CH,IAAAA,MAAM,CAACI,IAAP,GAAc,CAAC,CAAf;AACAJ,IAAAA,MAAM,CAACK,OAAP,GAAiB,wBAAjB;AACD,GAHD,MAGO;AACLL,IAAAA,MAAM,CAACI,IAAP,GAAc,CAAd;AACAJ,IAAAA,MAAM,CAACK,OAAP,GAAiBhB,IAAI,CAACE,IAAL,CAAU,UAAV,EAAsBe,EAAtB,GAA2B,OAA5C;AACAN,IAAAA,MAAM,CAACO,IAAP,GAAc,EAAd;AACAP,IAAAA,MAAM,CAACO,IAAP,CAAYjB,IAAZ,GAAmBA,IAAnB;AACAU,IAAAA,MAAM,CAACO,IAAP,CAAYC,KAAZ,GAAoB,mBAAmBC,IAAI,CAACC,MAAL,EAAvC;AACAV,IAAAA,MAAM,CAACO,IAAP,CAAYI,QAAZ,GAAuB,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,KAAK,EAAL,GAAU,IAA1C,CAAvB;AACAb,IAAAA,MAAM,CAACO,IAAP,CAAYO,WAAZ,GAA0B,CAAC;AAACC,MAAAA,EAAE,EAAE,WAAL;AAAkBC,MAAAA,SAAS,EAAE,CAAC,KAAD,EAAQ,MAAR;AAA7B,KAAD,CAA1B;AACAhB,IAAAA,MAAM,CAACO,IAAP,CAAYU,KAAZ,GAAoB,CAAC;AAACF,MAAAA,EAAE,EAAE,OAAL;AAAcC,MAAAA,SAAS,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB;AAAzB,KAAD,CAApB;AACD;;AACD,SAAOhB,MAAP;AACD,CAlBD","sourcesContent":["import Mock from 'mockjs'\nimport '@/mock/extend'\n\nconst user = Mock.mock({\n  name: '@ADMIN',\n  avatar: '@AVATAR',\n  address: '@CITY',\n  position: '@POSITION'\n})\nMock.mock(`${process.env.VUE_APP_API_BASE_URL}/login`, 'post', ({body}) => {\n  let result = {}\n  const {name, password} = JSON.parse(body)\n\n  if (name !== 'admin' || password !== '888888') {\n    result.code = -1\n    result.message = '账户名或密码错误（admin/888888）'\n  } else {\n    result.code = 0\n    result.message = Mock.mock('@TIMEFIX').CN + '，欢迎回来'\n    result.data = {}\n    result.data.user = user\n    result.data.token = 'Authorization:' + Math.random()\n    result.data.expireAt = new Date(new Date().getTime() + 30 * 60 * 1000)\n    result.data.permissions = [{id: 'queryForm', operation: ['add', 'edit']}]\n    result.data.roles = [{id: 'admin', operation: ['add', 'edit', 'delete']}]\n  }\n  return result\n})\n"]}]}