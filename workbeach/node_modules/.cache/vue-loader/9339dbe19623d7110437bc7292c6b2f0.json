{"remainingRequest":"/Applications/MAMP/gopath/workbench/workbeach/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/MAMP/gopath/workbench/workbeach/src/components/table/StandardTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Applications/MAMP/gopath/workbench/workbeach/src/components/table/StandardTable.vue","mtime":1598927029001},{"path":"/Applications/MAMP/gopath/workbench/workbeach/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/workbench/workbeach/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/workbench/workbeach/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/workbench/workbeach/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU3RhbmRhcmRUYWJsZScsCiAgcHJvcHM6IHsKICAgIGJvcmRlcmVkOiBCb29sZWFuLAogICAgbG9hZGluZzogW0Jvb2xlYW4sIE9iamVjdF0sCiAgICBjb2x1bW5zOiBBcnJheSwKICAgIGRhdGFTb3VyY2U6IEFycmF5LAogICAgcm93S2V5OiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIEZ1bmN0aW9uXSwKICAgICAgZGVmYXVsdDogJ2tleScKICAgIH0sCiAgICBwYWdpbmF0aW9uOiB7CiAgICAgIHR5cGU6IFtPYmplY3QsIEJvb2xlYW5dLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgc2VsZWN0ZWRSb3dzOiBBcnJheSwKICAgIGV4cGFuZGVkUm93S2V5czogQXJyYXksCiAgICBleHBhbmRlZFJvd1JlbmRlcjogRnVuY3Rpb24KICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgbmVlZFRvdGFsTGlzdDogW10KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVNlbGVjdCAoc2VsZWN0ZWRSb3dLZXlzLCBzZWxlY3RlZFJvd3MpIHsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnNlbGVjdGVkUm93cycsIHNlbGVjdGVkUm93cykKICAgICAgdGhpcy4kZW1pdCgnc2VsZWN0ZWRSb3dDaGFuZ2UnLCBzZWxlY3RlZFJvd0tleXMsIHNlbGVjdGVkUm93cykKICAgIH0sCiAgICBpbml0VG90YWxMaXN0IChjb2x1bW5zKSB7CiAgICAgIGNvbnN0IHRvdGFsTGlzdCA9IGNvbHVtbnMuZmlsdGVyKGl0ZW0gPT4gaXRlbS5uZWVkVG90YWwpCiAgICAgICAgLm1hcChpdGVtID0+IHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIC4uLml0ZW0sCiAgICAgICAgICAgIHRvdGFsOiAwCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgcmV0dXJuIHRvdGFsTGlzdAogICAgfSwKICAgIG9uQ2xlYXIoKSB7CiAgICAgIHRoaXMudXBkYXRlU2VsZWN0KFtdLCBbXSkKICAgICAgdGhpcy4kZW1pdCgnY2xlYXInKQogICAgfSwKICAgIG9uQ2hhbmdlKHBhZ2luYXRpb24sIGZpbHRlcnMsIHNvcnRlciwge2N1cnJlbnREYXRhU291cmNlfSkgewogICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCBwYWdpbmF0aW9uLCBmaWx0ZXJzLCBzb3J0ZXIsIHtjdXJyZW50RGF0YVNvdXJjZX0pCiAgICB9CiAgfSwKICBjcmVhdGVkICgpIHsKICAgIHRoaXMubmVlZFRvdGFsTGlzdCA9IHRoaXMuaW5pdFRvdGFsTGlzdCh0aGlzLmNvbHVtbnMpCiAgfSwKICB3YXRjaDogewogICAgc2VsZWN0ZWRSb3dzIChzZWxlY3RlZFJvd3MpIHsKICAgICAgdGhpcy5uZWVkVG90YWxMaXN0ID0gdGhpcy5uZWVkVG90YWxMaXN0Lm1hcChpdGVtID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgLi4uaXRlbSwKICAgICAgICAgIHRvdGFsOiBzZWxlY3RlZFJvd3MucmVkdWNlKChzdW0sIHZhbCkgPT4gewogICAgICAgICAgICByZXR1cm4gc3VtICsgdmFsW2l0ZW0uZGF0YUluZGV4XQogICAgICAgICAgfSwgMCkKICAgICAgICB9CiAgICAgIH0pCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgc2VsZWN0ZWRSb3dLZXlzKCkgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZFJvd3MubWFwKHJlY29yZCA9PiB7CiAgICAgICAgcmV0dXJuICh0eXBlb2YgdGhpcy5yb3dLZXkgPT09ICdmdW5jdGlvbicpID8gdGhpcy5yb3dLZXkocmVjb3JkKSA6IHJlY29yZFt0aGlzLnJvd0tleV0KICAgICAgfSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["StandardTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StandardTable.vue","sourceRoot":"src/components/table","sourcesContent":["<template>\n  <div class=\"standard-table\">\n    <div class=\"alert\">\n      <a-alert type=\"info\" :show-icon=\"true\" v-if=\"selectedRows\">\n        <div class=\"message\" slot=\"message\">\n          已选择&nbsp;<a>{{selectedRows.length}}</a>&nbsp;项 <a class=\"clear\" @click=\"onClear\">清空</a>\n          <template  v-for=\"(item, index) in needTotalList\" >\n            <div v-if=\"item.needTotal\" :key=\"index\">\n              {{item.title}}总计&nbsp;\n              <a>{{item.customRender ? item.customRender(item.total) : item.total}}</a>\n            </div>\n          </template>\n        </div>\n      </a-alert>\n    </div>\n    <a-table\n      :bordered=\"bordered\"\n      :loading=\"loading\"\n      :columns=\"columns\"\n      :dataSource=\"dataSource\"\n      :rowKey=\"rowKey\"\n      :pagination=\"pagination\"\n      :expandedRowKeys=\"expandedRowKeys\"\n      :expandedRowRender=\"expandedRowRender\"\n      @change=\"onChange\"\n      :rowSelection=\"selectedRows ? {selectedRowKeys: selectedRowKeys, onChange: updateSelect} : undefined\"\n    >\n      <template slot-scope=\"text, record, index\" :slot=\"slot\" v-for=\"slot in Object.keys($scopedSlots).filter(key => key !== 'expandedRowRender') \">\n        <slot :name=\"slot\" v-bind=\"{text, record, index}\"></slot>\n      </template>\n      <template :slot=\"slot\" v-for=\"slot in Object.keys($slots)\">\n        <slot :name=\"slot\"></slot>\n      </template>\n      <template slot-scope=\"record, index, indent, expanded\" :slot=\"$scopedSlots.expandedRowRender ? 'expandedRowRender' : ''\">\n        <slot v-bind=\"{record, index, indent, expanded}\" :name=\"$scopedSlots.expandedRowRender ? 'expandedRowRender' : ''\"></slot>\n      </template>\n    </a-table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'StandardTable',\n  props: {\n    bordered: Boolean,\n    loading: [Boolean, Object],\n    columns: Array,\n    dataSource: Array,\n    rowKey: {\n      type: [String, Function],\n      default: 'key'\n    },\n    pagination: {\n      type: [Object, Boolean],\n      default: true\n    },\n    selectedRows: Array,\n    expandedRowKeys: Array,\n    expandedRowRender: Function\n  },\n  data () {\n    return {\n      needTotalList: []\n    }\n  },\n  methods: {\n    updateSelect (selectedRowKeys, selectedRows) {\n      this.$emit('update:selectedRows', selectedRows)\n      this.$emit('selectedRowChange', selectedRowKeys, selectedRows)\n    },\n    initTotalList (columns) {\n      const totalList = columns.filter(item => item.needTotal)\n        .map(item => {\n          return {\n            ...item,\n            total: 0\n          }\n        })\n      return totalList\n    },\n    onClear() {\n      this.updateSelect([], [])\n      this.$emit('clear')\n    },\n    onChange(pagination, filters, sorter, {currentDataSource}) {\n      this.$emit('change', pagination, filters, sorter, {currentDataSource})\n    }\n  },\n  created () {\n    this.needTotalList = this.initTotalList(this.columns)\n  },\n  watch: {\n    selectedRows (selectedRows) {\n      this.needTotalList = this.needTotalList.map(item => {\n        return {\n          ...item,\n          total: selectedRows.reduce((sum, val) => {\n            return sum + val[item.dataIndex]\n          }, 0)\n        }\n      })\n    }\n  },\n  computed: {\n    selectedRowKeys() {\n      return this.selectedRows.map(record => {\n        return (typeof this.rowKey === 'function') ? this.rowKey(record) : record[this.rowKey]\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"less\">\n.standard-table{\n  .alert{\n    margin-bottom: 16px;\n    .message{\n      a{\n        font-weight: 600;\n      }\n    }\n    .clear{\n      float: right;\n    }\n  }\n}\n</style>\n"]}]}