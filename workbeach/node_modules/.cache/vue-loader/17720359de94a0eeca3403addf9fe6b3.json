{"remainingRequest":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/MAMP/gopath/vue-antd-admin/src/layouts/header/AdminHeader.vue?vue&type=style&index=0&id=4ac8b1f9&lang=less&scoped=true&","dependencies":[{"path":"/Applications/MAMP/gopath/vue-antd-admin/src/layouts/header/AdminHeader.vue","mtime":1598927029006},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiaW5kZXgiOwo="},{"version":3,"sources":["AdminHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA","file":"AdminHeader.vue","sourceRoot":"src/layouts/header","sourcesContent":["<template>\n  <a-layout-header :class=\"[headerTheme, 'admin-header']\">\n    <div :class=\"['admin-header-wide', layout]\">\n      <router-link v-if=\"isMobile || layout === 'head'\" to=\"/\" :class=\"['logo', isMobile ? null : 'pc', headerTheme]\">\n        <img width=\"32\" src=\"@/assets/img/logo.png\" />\n        <h1 v-if=\"!isMobile\">{{systemName}}</h1>\n      </router-link>\n      <a-divider v-if=\"isMobile\" type=\"vertical\" />\n      <a-icon v-if=\"layout !== 'head'\" class=\"trigger\" :type=\"collapsed ? 'menu-unfold' : 'menu-fold'\" @click=\"toggleCollapse\"/>\n      <div v-if=\"layout !== 'side' && !isMobile\" class=\"admin-header-menu\" :style=\"`width: ${menuWidth};`\">\n        <i-menu class=\"head-menu\" :theme=\"headerTheme\" mode=\"horizontal\" :options=\"menuData\" @select=\"onSelect\"/>\n      </div>\n      <div :class=\"['admin-header-right', headerTheme]\">\n          <header-search class=\"header-item\" @active=\"val => searchActive = val\" />\n          <a-tooltip class=\"header-item\" title=\"帮助文档\" placement=\"bottom\" >\n            <a href=\"https://iczer.github.io/vue-antd-admin/\" target=\"_blank\">\n              <a-icon type=\"question-circle-o\" />\n            </a>\n          </a-tooltip>\n          <header-notice class=\"header-item\"/>\n          <header-avatar class=\"header-item\"/>\n          <a-dropdown class=\"lang header-item\">\n            <div>\n              <a-icon type=\"global\"/> {{langAlias}}\n            </div>\n            <a-menu @click=\"val => setLang(val.key)\" :selected-keys=\"[lang]\" slot=\"overlay\">\n              <a-menu-item v-for=\" lang in langList\" :key=\"lang.key\">{{lang.key.toLowerCase() + ' ' + lang.name}}</a-menu-item>\n            </a-menu>\n          </a-dropdown>\n      </div>\n    </div>\n  </a-layout-header>\n</template>\n\n<script>\nimport HeaderSearch from './HeaderSearch'\nimport HeaderNotice from './HeaderNotice'\nimport HeaderAvatar from './HeaderAvatar'\nimport IMenu from '@/components/menu/menu'\nimport {mapState, mapMutations} from 'vuex'\n\nexport default {\n  name: 'AdminHeader',\n  components: {IMenu, HeaderAvatar, HeaderNotice, HeaderSearch},\n  props: ['collapsed', 'menuData'],\n  data() {\n    return {\n      langList: [\n        {key: 'CN', name: '简体中文', alias: '简体'},\n        {key: 'HK', name: '繁體中文', alias: '繁體'},\n        {key: 'US', name: 'English', alias: 'English'}\n      ],\n      searchActive: false\n    }\n  },\n  computed: {\n    ...mapState('setting', ['theme', 'isMobile', 'layout', 'systemName', 'lang']),\n    headerTheme () {\n      if (this.layout == 'side' && this.theme.mode == 'dark' && !this.isMobile) {\n        return 'light'\n      }\n      return this.theme.mode\n    },\n    langAlias() {\n      let lang = this.langList.find(item => item.key == this.lang)\n      return lang.alias\n    },\n    menuWidth() {\n      const {layout, searchActive} = this\n      const headWidth = layout === 'head' ? '1236px' : '100%'\n      const extraWidth = searchActive ? '564px' : '364px'\n      return `calc(${headWidth} - ${extraWidth})`\n    }\n  },\n  methods: {\n    toggleCollapse () {\n      this.$emit('toggleCollapse')\n    },\n    onSelect (obj) {\n      this.$emit('menuSelect', obj)\n    },\n    ...mapMutations('setting', ['setLang'])\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import \"index\";\n</style>\n"]}]}