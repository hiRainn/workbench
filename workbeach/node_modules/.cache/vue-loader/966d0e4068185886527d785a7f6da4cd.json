{"remainingRequest":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/MAMP/gopath/vue-antd-admin/src/components/transition/PageToggleTransition.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Applications/MAMP/gopath/vue-antd-admin/src/components/transition/PageToggleTransition.vue","mtime":1598927029003},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnBhZ2UtdG9nZ2xlLWVudGVyLWFjdGl2ZXsKICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDsKICBhbmltYXRpb24tZHVyYXRpb246IDAuOHMgIWltcG9ydGFudDsKICB3aWR0aDogY2FsYygxMDAlKSAhaW1wb3J0YW50Owp9Ci5wYWdlLXRvZ2dsZS1sZWF2ZS1hY3RpdmV7CiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7CiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjhzICFpbXBvcnRhbnQ7CiAgd2lkdGg6IGNhbGMoMTAwJSkgIWltcG9ydGFudDsKfQoucGFnZS10b2dnbGUtZW50ZXJ7Cn0KLnBhZ2UtdG9nZ2xlLWxlYXZlLXRvewp9Cg=="},{"version":3,"sources":["PageToggleTransition.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageToggleTransition.vue","sourceRoot":"src/components/transition","sourcesContent":["<template>\n  <transition\n    v-if=\"!disabled\"\n    :enter-active-class=\"`animated ${enterAnimate} page-toggle-enter-active`\"\n    :leave-active-class=\"`animated ${leaveAnimate} page-toggle-leave-active`\"\n  >\n    <slot></slot>\n  </transition>\n  <div v-else><slot></slot></div>\n</template>\n\n<script>\n  import {preset as animates} from '@/config/default/animate.config'\n\n  export default {\n    name: 'PageToggleTransition',\n    props: {\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      animate: {\n        type: String,\n        validator(value) {\n          return animates.findIndex(item => item.name == value) != -1\n        },\n        default: 'bounce'\n      },\n      direction: {\n        type: String,\n        validator(value) {\n          return ['x', 'y', 'left', 'right', 'up', 'down', 'downLeft', 'upRight', 'downRight', 'upLeft', 'downBig',\n            'upBig', 'downLeft', 'downRight', 'topRight', 'bottomLeft', 'topLeft', 'bottomRight', 'default'].indexOf(value) > -1\n        }\n      },\n      reverse: {\n        type: Boolean,\n        default: true\n      }\n    },\n    computed: {\n      enterAnimate() {\n        return this.activeClass(false)\n      },\n      leaveAnimate() {\n        return this.activeClass(true)\n      }\n    },\n    methods: {\n      activeClass(isLeave) {\n        let animate = animates.find(item => this.animate == item.name)\n        if (animate == undefined) {\n          return ''\n        }\n        let direction = ''\n        if (this.direction == undefined) {\n          direction = animate.directions[0]\n        } else {\n          direction = animate.directions.find(item => item == this.direction)\n        }\n        direction = (direction == undefined || direction === 'default') ? '' : direction\n        if (direction != '') {\n          direction = isLeave && this.reverse ? this.reversePosition(direction, animate.directions) : direction\n          direction = direction[0].toUpperCase() + direction.substring(1)\n        }\n        let t = isLeave ? 'Out' : 'In'\n        return animate.name + t + direction\n      },\n      reversePosition(direction, directions) {\n        if(direction.length == 0 || direction == 'x' || direction == 'y') {\n          return direction\n        }\n        let index = directions.indexOf(direction)\n        index = (index % 2 == 1) ? index - 1 : index + 1\n        return directions[index]\n      }\n    }\n  }\n</script>\n\n<style lang=\"less\">\n  .page-toggle-enter-active{\n    position: absolute !important;\n    animation-duration: 0.8s !important;\n    width: calc(100%) !important;\n  }\n  .page-toggle-leave-active{\n    position: absolute !important;\n    animation-duration: 0.8s !important;\n    width: calc(100%) !important;\n  }\n  .page-toggle-enter{\n  }\n  .page-toggle-leave-to{\n  }\n</style>\n"]}]}