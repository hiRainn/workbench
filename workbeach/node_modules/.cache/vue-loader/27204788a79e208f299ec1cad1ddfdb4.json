{"remainingRequest":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/MAMP/gopath/vue-antd-admin/src/components/checkbox/ImgCheckbox.vue?vue&type=style&index=0&id=3a3fe34a&lang=less&scoped=true&","dependencies":[{"path":"/Applications/MAMP/gopath/vue-antd-admin/src/components/checkbox/ImgCheckbox.vue","mtime":1598927028993},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/gopath/vue-antd-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5pbWctY2hlY2stYm94ewogIG1hcmdpbi1yaWdodDogMTZweDsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGN1cnNvcjogcG9pbnRlcjsKICAuY2hlY2staXRlbXsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHRvcDogMDsKICAgIHJpZ2h0OiAwOwogICAgd2lkdGg6IDEwMCU7CiAgICBwYWRkaW5nLXRvcDogMTVweDsKICAgIHBhZGRpbmctbGVmdDogMjRweDsKICAgIGhlaWdodDogMTAwJTsKICAgIGNvbG9yOiBAcHJpbWFyeS1jb2xvcjsKICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogIH0KfQo="},{"version":3,"sources":["ImgCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImgCheckbox.vue","sourceRoot":"src/components/checkbox","sourcesContent":["<template>\n  <a-tooltip :title=\"title\" :overlayStyle=\"{zIndex: 2001}\">\n    <div class=\"img-check-box\" @click=\"toggle\">\n      <img :src=\"img\" />\n      <div v-if=\"sChecked\" class=\"check-item\">\n        <a-icon type=\"check\" />\n      </div>\n    </div>\n  </a-tooltip>\n</template>\n\n<script>\nconst Group = {\n  name: 'ImgCheckboxGroup',\n  props: {\n    multiple: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    defaultValues: {\n      type: Array,\n      required: false,\n      default: () => []\n    }\n  },\n  data () {\n    return {\n      values: [],\n      options: []\n    }\n  },\n  provide () {\n    return {\n      groupContext: this\n    }\n  },\n  watch: {\n    'values': function (value) {\n      this.$emit('change', value)\n      // // 此条件是为解决单选时，触发两次chang事件问题\n      // if (!(newVal.length === 1 && oldVal.length === 1 && newVal[0] === oldVal[0])) {\n      //   this.$emit('change', this.values)\n      // }\n    }\n  },\n  methods: {\n    handleChange (option) {\n      if (!option.checked) {\n        if (this.values.indexOf(option.value) > -1) {\n          this.values = this.values.filter(item => item != option.value)\n        }\n      } else {\n        if (!this.multiple) {\n          this.values = [option.value]\n          this.options.forEach(item => {\n            if (item.value != option.value) {\n              item.sChecked = false\n            }\n          })\n        } else {\n          this.values.push(option.value)\n        }\n      }\n    }\n  },\n  render (h) {\n    return h(\n      'div',\n      {\n        attrs: {style: 'display: flex'}\n      },\n      [this.$slots.default]\n    )\n  }\n}\n\nexport default {\n  name: 'ImgCheckbox',\n  Group,\n  props: {\n    checked: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    img: {\n      type: String,\n      required: true\n    },\n    value: {\n      required: true\n    },\n    title: String\n  },\n  data () {\n    return {\n      sChecked: this.initChecked()\n    }\n  },\n  inject: ['groupContext'],\n  watch: {\n    'sChecked': function () {\n      const option = {\n        value: this.value,\n        checked: this.sChecked\n      }\n      this.$emit('change', option)\n      const groupContext = this.groupContext\n      if (groupContext) {\n        groupContext.handleChange(option)\n      }\n    }\n  },\n  created () {\n    const groupContext = this.groupContext\n    if (groupContext) {\n      this.sChecked = groupContext.defaultValues.length > 0 ? groupContext.defaultValues.indexOf(this.value) >= 0 : this.sChecked\n      groupContext.options.push(this)\n    }\n  },\n  methods: {\n    toggle () {\n      if (this.groupContext.multiple || !this.sChecked) {\n        this.sChecked = !this.sChecked\n      }\n    },\n    initChecked() {\n      let groupContext = this.groupContext\n      if (!groupContext) {\n        return this.checked\n      }else if (groupContext.multiple) {\n        return groupContext.defaultValues.indexOf(this.value) > -1\n      } else {\n        return groupContext.defaultValues[0] == this.value\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n  .img-check-box{\n    margin-right: 16px;\n    position: relative;\n    border-radius: 4px;\n    cursor: pointer;\n    .check-item{\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: 100%;\n      padding-top: 15px;\n      padding-left: 24px;\n      height: 100%;\n      color: @primary-color;\n      font-size: 14px;\n      font-weight: bold;\n    }\n  }\n</style>\n"]}]}